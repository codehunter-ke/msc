/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package siemconverter;

import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import siemconverter.message.IMessageTransmitter;
import siemconverter.message.kiwi.KiwiMessageTransmitterImpl;
import siemconverter.message.kiwi.KiwiMessageTransmitterImpl_1;

/**
 *
 * @author mark.meli
 */
public class HOME extends javax.swing.JFrame {
      DBconnection consql = null;
      ResultSet rs=null;
      DBconnectionMysql conMysql=null;
    /**
     * Creates new form HOME
     */
    public HOME() {
            
        initComponents();
        conMysql = new DBconnectionMysql();
        consql = new DBconnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        process_tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        ImportSecEventbtn = new javax.swing.JButton();
        list_event_btn = new javax.swing.JButton();
        SecEventScrollPane = new javax.swing.JScrollPane();
        SecEventTbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        UserActivityScrollPane = new javax.swing.JScrollPane();
        UserActivityTbl = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        ImportUserActivityEventbtn = new javax.swing.JButton();
        ListUserActivityBtn = new javax.swing.JButton();
        ClearloginEventtbkbtn = new javax.swing.JButton();
        clearactivitytblbtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        exportSysLogbtn = new javax.swing.JButton();
        ProcessUserActivityScrollPane = new javax.swing.JScrollPane();
        ProcessUserActivityTbl1 = new javax.swing.JTable();
        Externalloginbtn = new javax.swing.JButton();
        Searchempactvtytxtbtn = new javax.swing.JButton();
        Searchempactvtytxtbox = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        process_tab.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N

        ImportSecEventbtn.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        ImportSecEventbtn.setText("IMPORT LOGIN EVENT DATA");
        ImportSecEventbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportSecEventbtnActionPerformed(evt);
            }
        });

        list_event_btn.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        list_event_btn.setText("LIST LOGIN EVENT DATA");
        list_event_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list_event_btnActionPerformed(evt);
            }
        });

        SecEventTbl.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        SecEventTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Employee Role", "group ID", "Employee ID", "Email Address", "Full Name", "Login Date Time", "IP Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SecEventScrollPane.setViewportView(SecEventTbl);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("LOGIN EVENTS");

        UserActivityTbl.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        UserActivityTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Menu", "Last Modified By", "Employee ID", "Action", "Last Mofied Date", "Record"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UserActivityScrollPane.setViewportView(UserActivityTbl);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("USER ACTIVITY LOG");

        ImportUserActivityEventbtn.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        ImportUserActivityEventbtn.setText("IMPORT USER ACTIVITY DATA");
        ImportUserActivityEventbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportUserActivityEventbtnActionPerformed(evt);
            }
        });

        ListUserActivityBtn.setText("LIST USER ACTIVITY DATA");
        ListUserActivityBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListUserActivityBtnActionPerformed(evt);
            }
        });

        ClearloginEventtbkbtn.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        ClearloginEventtbkbtn.setText("CLEAR LOGIN EVENTS TABLE");
        ClearloginEventtbkbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearloginEventtbkbtnActionPerformed(evt);
            }
        });

        clearactivitytblbtn.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        clearactivitytblbtn.setText("CLEAR USER ACTIVITY TABLE");
        clearactivitytblbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearactivitytblbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(list_event_btn)
                                .addGap(111, 111, 111)
                                .addComponent(ImportSecEventbtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ClearloginEventtbkbtn))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ListUserActivityBtn)
                                .addGap(117, 117, 117)
                                .addComponent(ImportUserActivityEventbtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 442, Short.MAX_VALUE)
                                .addComponent(clearactivitytblbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(SecEventScrollPane)
                            .addComponent(UserActivityScrollPane)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SecEventScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(list_event_btn)
                    .addComponent(ImportSecEventbtn)
                    .addComponent(ClearloginEventtbkbtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UserActivityScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ImportUserActivityEventbtn)
                    .addComponent(ListUserActivityBtn)
                    .addComponent(clearactivitytblbtn))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        process_tab.addTab("IMPORT EVENT DATA", jPanel1);

        exportSysLogbtn.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        exportSysLogbtn.setText("EXPORT ALL EVENTS TO SYSLOG SERVER");
        exportSysLogbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportSysLogbtnActionPerformed(evt);
            }
        });

        ProcessUserActivityTbl1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        ProcessUserActivityTbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Menu", "Last Modified By", "Employee ID", "Action", "Last Mofied Date", "Record"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ProcessUserActivityScrollPane.setViewportView(ProcessUserActivityTbl1);

        Externalloginbtn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        Externalloginbtn.setText("Login from external network");
        Externalloginbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExternalloginbtnActionPerformed(evt);
            }
        });

        Searchempactvtytxtbtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Searchempactvtytxtbtn.setText("Search");
        Searchempactvtytxtbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchempactvtytxtbtnActionPerformed(evt);
            }
        });

        Searchempactvtytxtbox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel3.setText("Please enter the employee ID in the field below to list all user activities");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exportSysLogbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Externalloginbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(149, 149, 149)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Searchempactvtytxtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(142, 142, 142)
                                .addComponent(Searchempactvtytxtbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(347, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(ProcessUserActivityScrollPane)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(exportSysLogbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Externalloginbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Searchempactvtytxtbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Searchempactvtytxtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(571, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(215, 215, 215)
                    .addComponent(ProcessUserActivityScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        process_tab.addTab("PROCESS", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(process_tab)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(process_tab)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void list_event_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list_event_btnActionPerformed
        
        for( int i = SecEventTbl.getModel().getRowCount() - 1; i >= 0; i-- )
        {
            ((DefaultTableModel)SecEventTbl.getModel()).removeRow(i);
        }
        int SecEventCount=0;
    String query="SELECT * FROM sentrifugo.main_userloginlog";
    //String Header = "id\tUserid\temprole\tgroup_id\temployeeId\temailaddress\tuserfullname\tlogindatetime\tempipaddress\n=====";
    //SecEventTbl.append(Header+"\n");
    rs=conMysql.retrieve(query);
      try
        {
        while (rs.next())
        {
           // String id=rs.getString("id");
            String userid=rs.getString("userid");
            String Emprole=rs.getString("emprole");
            String Groupid=rs.getString("group_id");
            String employeeid=rs.getString("employeeId");
            String Emailaddress=rs.getString("emailaddress");
            String userfullname=rs.getString("userfullname");
            String logindatetime=rs.getString("logindatetime");
            String Empipaddress=rs.getString("empipaddress");
           
            
            ((DefaultTableModel)SecEventTbl.getModel()).addRow(new Object[]{userid,Emprole,Groupid,employeeid,Emailaddress,userfullname,logindatetime,Empipaddress});
            SecEventCount++;
        }
        JOptionPane.showMessageDialog(null,"We have found "+SecEventCount+" Events","COMPLETE" , JOptionPane.INFORMATION_MESSAGE);
        }
        catch(SQLException w)
        {
            JOptionPane.showMessageDialog(null,w.getMessage()," NO RECORD FOUND ",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_list_event_btnActionPerformed

    private void ImportSecEventbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportSecEventbtnActionPerformed

        int SecEventCount=0;
       for( int i = SecEventTbl.getModel().getRowCount() - 1; i >= 0; i-- )
        {

            String userid =SecEventTbl.getModel().getValueAt(i,0).toString();
            String emprole =SecEventTbl.getModel().getValueAt(i,1).toString();
            String groupid =SecEventTbl.getModel().getValueAt(i,2).toString();
            String employeeid =SecEventTbl.getModel().getValueAt(i,3).toString();
            String emailaddress =SecEventTbl.getModel().getValueAt(i,4).toString();
            String userfullname = SecEventTbl.getModel().getValueAt(i,5).toString();
            String logindatetime =SecEventTbl.getModel().getValueAt(i,6).toString();
            String employeeipaddress =SecEventTbl.getModel().getValueAt(i,7).toString();
            
          
            String SecUserLoginLog = "INSERT INTO userloginlog (Userid,emprole,group_id,employeeId,emailaddress,userfullnames,logindatetime,empipaddress,status) VALUES ('"+userid+"','"+emprole+"','"+groupid+"','"+employeeid+"','"+emailaddress+"','"+userfullname+"','"+logindatetime+"','"+employeeipaddress+"','Login Successfull')";
            consql.update(SecUserLoginLog);
            SecEventCount++;

        }
        JOptionPane.showMessageDialog(null,"You have imported "+SecEventCount+" security Events","COMPLETE" , JOptionPane.INFORMATION_MESSAGE);
     
    }//GEN-LAST:event_ImportSecEventbtnActionPerformed

    private void exportSysLogbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportSysLogbtnActionPerformed

    int SecEventCount=0;
    String querylogin= "SELECT * FROM [SIEM_CONVERTER].[dbo].[userloginlog]";
    String queryactivity="SELECT * FROM [SIEM_CONVERTER].[DBO].[useractivitylog]";
    rs=consql.retrieve(querylogin);
    
    try
        {
        while (rs.next())
        {
           // String id=rs.getString("id");
            String userid=rs.getString("userid");
            String Emprole=rs.getString("emprole");
            String Groupid=rs.getString("group_id");
            String employeeid=rs.getString("employeeId");
            String Emailaddress=rs.getString("emailaddress");
            String userfullname=rs.getString("userfullnames");
            String logindatetime=rs.getString("logindatetime");
            String Empipaddress=rs.getString("empipaddress");
            String status=rs.getString("status");
           
             final IMessageTransmitter kiwiMessageTransmitter = new KiwiMessageTransmitterImpl();
             kiwiMessageTransmitter.send(status+":UserIPaddress="+Empipaddress+":LoginDateTime="+logindatetime+"EmployeeID="+employeeid+":UserID="+userid+":"+userfullname+":EmployeeRole="+Emprole+":UserGroupID="+Groupid+":EmailAddress="+Emailaddress);  
           
            SecEventCount++;
        }
        JOptionPane.showMessageDialog(null,"We have sent "+SecEventCount+" Login Events to SysLog Server","COMPLETE" , JOptionPane.INFORMATION_MESSAGE);
        }
        catch(SQLException w)
        {
            JOptionPane.showMessageDialog(null,w.getMessage()," NO RECORD FOUND ",JOptionPane.ERROR_MESSAGE);
        }
        
    rs=consql.retrieve(queryactivity);
    try
        {
        while (rs.next())
        {
            String menu=rs.getString("menu");
            String last_modified_by=rs.getString("last_modified_by");
            String last_modified_date=rs.getString("last_modified_date");
            String employeeid=rs.getString("employeeId");
            String action=rs.getString("action");
            String record=rs.getString("record");
           
             final IMessageTransmitter kiwiMessageTransmitter = new KiwiMessageTransmitterImpl();
             kiwiMessageTransmitter.send("Table="+menu+":LastModifiedBy="+last_modified_by+":LastModifiedDate="+last_modified_date+":EmployeeID="+employeeid+":ActionPerformed="+action+":Record="+record);  
           
            SecEventCount++;
        }
        JOptionPane.showMessageDialog(null,"We have sent "+SecEventCount+" User Activity Events to SysLog Server","COMPLETE" , JOptionPane.INFORMATION_MESSAGE);
        }
        catch(SQLException w)
        {
            JOptionPane.showMessageDialog(null,w.getMessage()," NO RECORD FOUND ",JOptionPane.ERROR_MESSAGE);
        }                 
    }//GEN-LAST:event_exportSysLogbtnActionPerformed

    private void ImportUserActivityEventbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportUserActivityEventbtnActionPerformed
       
        int SecEventCount=0;
       for( int i = UserActivityTbl.getModel().getRowCount() - 1; i >= 0; i-- )
        {

            String menu =UserActivityTbl.getModel().getValueAt(i,0).toString();
            String last_modified_by =UserActivityTbl.getModel().getValueAt(i,1).toString();
            String last_modified_date =UserActivityTbl.getModel().getValueAt(i,4).toString();
            String employeeid =UserActivityTbl.getModel().getValueAt(i,2).toString();
            String action =UserActivityTbl.getModel().getValueAt(i,3).toString();
            String record = UserActivityTbl.getModel().getValueAt(i,5).toString();
           
            
          
            String SecUserLoginLog = "INSERT INTO [useractivitylog] (menu,last_modified_by,last_modified_date,employeeid,action,record) VALUES ('"+menu+"','"+last_modified_by+"','"+last_modified_date+"','"+employeeid+"','"+action+"','"+record+"')";
            consql.update(SecUserLoginLog);
            SecEventCount++;

        }
        JOptionPane.showMessageDialog(null,"You have imported "+SecEventCount+" security Events","COMPLETE" , JOptionPane.INFORMATION_MESSAGE);
     
    }//GEN-LAST:event_ImportUserActivityEventbtnActionPerformed

    private void ListUserActivityBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListUserActivityBtnActionPerformed
        
        for( int i = UserActivityTbl.getModel().getRowCount() - 1; i >= 0; i-- )
        {
            ((DefaultTableModel)UserActivityTbl.getModel()).removeRow(i);
        }
        int SecEventCount=0;
    String query="SELECT * FROM SIEMCONVERTBU UNION SELECT * FROM SIEMCONVERTDEPT union SELECT * FROM SIEMCONVERTJT UNION SELECT * FROM SIEMCONVERTPS UNION SELECT * FROM SIEMCONVERTEREMPS";
    rs=conMysql.retrieve(query);
      try
        {
        while (rs.next())
        {
          
            String menu=rs.getString(1);
            String modifiedby=rs.getString(2);
            String employeeid=rs.getString(3);
            String action=rs.getString(4);
            String lastdatemodified=rs.getString(5);
            String record=rs.getString(6);
                      
            
            ((DefaultTableModel)UserActivityTbl.getModel()).addRow(new Object[]{menu,modifiedby,employeeid,action,lastdatemodified,record});
            SecEventCount++;
        }
        JOptionPane.showMessageDialog(null,"We have found "+SecEventCount+" Events","COMPLETE" , JOptionPane.INFORMATION_MESSAGE);
        }
        catch(SQLException w)
        {
            JOptionPane.showMessageDialog(null,w.getMessage()," NO RECORD FOUND ",JOptionPane.ERROR_MESSAGE);
        }      
    }//GEN-LAST:event_ListUserActivityBtnActionPerformed

    private void ClearloginEventtbkbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearloginEventtbkbtnActionPerformed
       for( int i = SecEventTbl.getModel().getRowCount() - 1; i >= 0; i-- )
        {
            ((DefaultTableModel)SecEventTbl.getModel()).removeRow(i);
        }
    }//GEN-LAST:event_ClearloginEventtbkbtnActionPerformed

    private void clearactivitytblbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearactivitytblbtnActionPerformed
        
        for( int i = UserActivityTbl.getModel().getRowCount() - 1; i >= 0; i-- )
        {
            ((DefaultTableModel)UserActivityTbl.getModel()).removeRow(i);
        }
    }//GEN-LAST:event_clearactivitytblbtnActionPerformed

    private void ExternalloginbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExternalloginbtnActionPerformed
        for( int i = ProcessUserActivityTbl1.getModel().getRowCount() - 1; i >= 0; i-- )
        {
            ((DefaultTableModel)ProcessUserActivityTbl1.getModel()).removeRow(i);
        }
        
          for( int i = ProcessUserActivityTbl1.getModel().getRowCount() - 1; i >= 0; i-- )
        {
            ((DefaultTableModel)ProcessUserActivityTbl1.getModel()).removeRow(i);
        }
        int SecEventCount=0;
    String query="SELECT * FROM SIEMWRONGSUBNET  ";
    rs=conMysql.retrieve(query);
      try
        {
        while (rs.next())
        {
          
            String menu=rs.getString(1);
            String modifiedby=rs.getString(2);
            String employeeid=rs.getString(3);
            String action=rs.getString(4);
            String lastdatemodified=rs.getString(5);
            String record=rs.getString(6);
                      
            
            ((DefaultTableModel)ProcessUserActivityTbl1.getModel()).addRow(new Object[]{menu,modifiedby,employeeid,action,lastdatemodified,record});
            SecEventCount++;
        }
        JOptionPane.showMessageDialog(null,"We have found "+SecEventCount+" Events","COMPLETE" , JOptionPane.INFORMATION_MESSAGE);
        }
        catch(SQLException w)
        {
            JOptionPane.showMessageDialog(null,w.getMessage()," NO RECORD FOUND ",JOptionPane.ERROR_MESSAGE);
        }  
      if(SecEventCount!=0)
        {
            int reply=JOptionPane.showConfirmDialog(null,"Do you want to sent this report to Syslog Server","",JOptionPane.YES_NO_OPTION);
            if (reply==JOptionPane.YES_OPTION)
            {
                
                 for ( int i = ProcessUserActivityTbl1.getModel().getRowCount() - 1; i >= 0; i-- )
                 {
                    String menu =ProcessUserActivityTbl1.getModel().getValueAt(i,0).toString();
                    String last_modified_by =ProcessUserActivityTbl1.getModel().getValueAt(i,1).toString();
                    String last_modified_date =ProcessUserActivityTbl1.getModel().getValueAt(i,4).toString();
                    String employeeid =ProcessUserActivityTbl1.getModel().getValueAt(i,2).toString();
                    String action =ProcessUserActivityTbl1.getModel().getValueAt(i,3).toString();
                    String record = ProcessUserActivityTbl1.getModel().getValueAt(i,5).toString();
                   
            final IMessageTransmitter kiwiMessageTransmitter = new KiwiMessageTransmitterImpl_1();
             kiwiMessageTransmitter.send("Table="+menu+":LastModifiedBy="+last_modified_by+":LastModifiedDate="+last_modified_date+":EmployeeID="+employeeid+":ActionPerformed="+action+":Record="+record);  

        }
        JOptionPane.showMessageDialog(null,"You have imported "+SecEventCount+" security Events","COMPLETE" , JOptionPane.INFORMATION_MESSAGE);
                
            }
        }
  
    }//GEN-LAST:event_ExternalloginbtnActionPerformed

    private void SearchempactvtytxtbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchempactvtytxtbtnActionPerformed
       
        String employee_id = Searchempactvtytxtbox.getText().trim();
        if (employee_id.isEmpty())
        {
            JOptionPane.showMessageDialog(null," PLEASE ENTER A EMPLOYEE ID","BLANK FIELDS" , JOptionPane.INFORMATION_MESSAGE);
        }
        else
        {
           for( int i = ProcessUserActivityTbl1.getModel().getRowCount() - 1; i >= 0; i-- )
                {
                  ((DefaultTableModel)ProcessUserActivityTbl1.getModel()).removeRow(i);
                 }
                 int SecEventCount=0;
                 String query="SELECT * FROM SIEMCONVERTBU WHERE EMPLOYEEID like '%"+employee_id+"%' UNION SELECT * FROM SIEMCONVERTDEPT WHERE EMPLOYEEID like '%"+employee_id+"%' union SELECT * FROM SIEMCONVERTJT WHERE EMPLOYEEID like '%"+employee_id+"%' UNION SELECT * FROM SIEMCONVERTPS WHERE EMPLOYEEID like '%"+employee_id+"%' UNION SELECT * FROM SIEMCONVERTEREMPS WHERE EMPLOYEEID like '%"+employee_id+"%' order by lastmodifieddate desc";
                    rs=conMysql.retrieve(query);
                      try
                       {
                         while (rs.next())
                             {
          
                                 String menu=rs.getString(1);
                                 String modifiedby=rs.getString(2);
                                 String employeeid=rs.getString(3);
                                 String action=rs.getString(4);
                                 String lastdatemodified=rs.getString(5);
                                 String record=rs.getString(6);
                      
            
                                 ((DefaultTableModel)ProcessUserActivityTbl1.getModel()).addRow(new Object[]{menu,modifiedby,employeeid,action,lastdatemodified,record});
                                 SecEventCount++;
                            }
                            JOptionPane.showMessageDialog(null,"We have found "+SecEventCount+" Events","COMPLETE" , JOptionPane.INFORMATION_MESSAGE);
                        }
                        catch(SQLException w)
                        {
                            JOptionPane.showMessageDialog(null,w.getMessage()," NO RECORD FOUND ",JOptionPane.ERROR_MESSAGE);
                        } 
                      if(SecEventCount!=0)
        {
            int reply=JOptionPane.showConfirmDialog(null,"Do you want to sent this report to Syslog Server","",JOptionPane.YES_NO_OPTION);
            if (reply==JOptionPane.YES_OPTION)
            {
                
                 for ( int i = ProcessUserActivityTbl1.getModel().getRowCount() - 1; i >= 0; i-- )
                 {
                    String menu =ProcessUserActivityTbl1.getModel().getValueAt(i,0).toString();
                    String last_modified_by =ProcessUserActivityTbl1.getModel().getValueAt(i,1).toString();
                    String last_modified_date =ProcessUserActivityTbl1.getModel().getValueAt(i,4).toString();
                    String employeeid =ProcessUserActivityTbl1.getModel().getValueAt(i,2).toString();
                    String action =ProcessUserActivityTbl1.getModel().getValueAt(i,3).toString();
                    String record = ProcessUserActivityTbl1.getModel().getValueAt(i,5).toString();
                   
            final IMessageTransmitter kiwiMessageTransmitter = new KiwiMessageTransmitterImpl();
             kiwiMessageTransmitter.send("Table="+menu+":LastModifiedBy="+last_modified_by+":LastModifiedDate="+last_modified_date+":EmployeeID="+employeeid+":ActionPerformed="+action+":Record="+record);  

        }
        JOptionPane.showMessageDialog(null,"You have imported "+SecEventCount+" security Events","COMPLETE" , JOptionPane.INFORMATION_MESSAGE);
                
            }
        }
                     }
        
    }//GEN-LAST:event_SearchempactvtytxtbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HOME().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearloginEventtbkbtn;
    private javax.swing.JButton Externalloginbtn;
    private javax.swing.JButton ImportSecEventbtn;
    private javax.swing.JButton ImportUserActivityEventbtn;
    private javax.swing.JButton ListUserActivityBtn;
    private javax.swing.JScrollPane ProcessUserActivityScrollPane;
    private javax.swing.JTable ProcessUserActivityTbl1;
    private javax.swing.JTextField Searchempactvtytxtbox;
    private javax.swing.JButton Searchempactvtytxtbtn;
    private javax.swing.JScrollPane SecEventScrollPane;
    private javax.swing.JTable SecEventTbl;
    private javax.swing.JScrollPane UserActivityScrollPane;
    private javax.swing.JTable UserActivityTbl;
    private javax.swing.JButton clearactivitytblbtn;
    private javax.swing.JButton exportSysLogbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton list_event_btn;
    private javax.swing.JTabbedPane process_tab;
    // End of variables declaration//GEN-END:variables
}
